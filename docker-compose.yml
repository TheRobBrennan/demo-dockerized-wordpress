version: "3.3"

services:
  db:
    image: mysql:8.0
    volumes:
      # Uncomment if you would like to load a previously exported WordPress SQL file
      - ./database/local.sql:/docker-entrypoint-initdb.d/init.sql # prepopulate database

      # Persist database data inside docker storage
      - db_data:/var/lib/mysql
    restart: always
    env_file:
      - .env
    environment:
      # Use this environment variable for debugging Docker containers to see which docker-compose.yml was used for a particular container
      DOCKER_COMPOSE_YML_LOCATION: ${PWD}
    container_name: wp_db

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - "8080:80"
    environment:
      PMA_HOST: db
      # MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ALLOW_EMPTY_PASSWORD: ${MYSQL_ALLOW_EMPTY_PASSWORD}

      # Use this environment variable for debugging Docker containers to see which docker-compose.yml was used for a particular container
      DOCKER_COMPOSE_YML_LOCATION: ${PWD}
    container_name: wp_phpmyadmin

  wordpress:
    depends_on:
      - db
    image: wordpress:latest
    ports:
      - "8000:80"
    restart: always
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: ${WORDPRESS_DATABASE_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DATABASE_PASSWORD}
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}

      # Use this environment variable for debugging Docker containers to see which docker-compose.yml was used for a particular container
      DOCKER_COMPOSE_YML_LOCATION: ${PWD}
    volumes:
      - ./wordpress/wp-content:/var/www/html/wp-content
    container_name: wp_wordpress

volumes:
  db_data: {}
